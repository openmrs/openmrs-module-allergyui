<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openmrs.module</groupId>
		<artifactId>allergyui</artifactId>
		<version>1.3-SNAPSHOT</version>
	</parent>

	<artifactId>allergyui-omod-1.0</artifactId>
	<packaging>jar</packaging>
	<name>Allergy UI Module OMOD 1.0</name>
	<description>OMOD project for AllergyUI</description>

    <properties>
       <!-- by default rubygems are installed in the target directory, which we don't want, because then they'd need to be reinstalled after every clean -->
        <gem.home>${basedir}/.rubygems</gem.home>
        <gem.path>${basedir}/.rubygems</gem.path>
		<openmrs.version.1.0>1.11.3</openmrs.version.1.0>
		<distro.version.1.0>LATEST</distro.version.1.0>
	</properties>

	<dependencies>

		<!-- 
		Add other dependencies from parent's pom: 
		<dependency> 
			<groupId>org.other.library</groupId> 
			<artifactId>library-name</artifactId> 
		</dependency> 
		-->
		
	        <!-- Importing versions from refapp distro -->
			<dependency>
				<groupId>${distro.groupId}</groupId>
				<artifactId>${distro.artifactId}</artifactId>
				<version>${distro.version.1.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		
		
		<!-- Begin OpenMRS modules -->
		
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>${project.parent.artifactId}-api</artifactId>
			<version>${project.parent.version}</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>uiframework-api</artifactId>
            <version>${uiframeworkVersion}</version>
        </dependency>
        
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>allergyapi-api</artifactId>
        </dependency>
				
		<!-- End OpenMRS modules -->
		

		<!-- Begin OpenMRS core -->

		<dependency>
			<groupId>org.openmrs.api</groupId>
			<artifactId>openmrs-api</artifactId>
			<type>jar</type>
			<version>${openmrs.version.1.0}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.openmrs.web</groupId>
			<artifactId>openmrs-web</artifactId>
			<type>jar</type>
			<version>${openmrs.version.1.0}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<dependency>
			<groupId>org.openmrs.api</groupId>
			<artifactId>openmrs-api</artifactId>
			<type>test-jar</type>
			<version>${openmrs.version.1.0}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.openmrs.web</groupId>
			<artifactId>openmrs-web</artifactId>
			<type>test-jar</type>
			<version>${openmrs.version.1.0}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>org.openmrs.test</groupId>
			<artifactId>openmrs-test</artifactId>
			<type>pom</type>
			<version>${openmrs.version.1.0}</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- End OpenMRS core -->

		<dependency>
			<groupId>rubygems</groupId>
			<artifactId>compass</artifactId>
			<version>0.11.7</version>
			<type>gem</type>
            <scope>provided</scope>
		</dependency>

        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>uicommons-omod</artifactId>
        </dependency>

	</dependencies>

	<build>
		<finalName>${project.parent.artifactId}-${project.parent.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>resources</exclude>
				</excludes>
				<targetPath>web/module</targetPath>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<filtering>false</filtering>
				<includes>
					<include>resources</include>
				</includes>
				<targetPath>web/module</targetPath>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

	</build>

</project>
